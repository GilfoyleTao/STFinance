import { Component } from '@angular/core';
import { NavController, NavParams } from 'ionic-angular';
// pages
import { FillinpasswordPage } from './../Fillinpassword/Fillinpassword';
// service
import { StorageService } from "../../../providers/StorageService";
import { STLoginService } from "../STLoginService";
import { AlertService } from './../../../providers/Alert.service';
import { Utils } from './../../../providers/Utils';
// model
import { FILE_SERVE_URL, USER_INFO } from './../../../providers/Constants';

@Component({
    selector: 'Page-Register',
    templateUrl: 'Register.html',
})
export class RegisterPage {
    Overlay: any = {};//弹窗
    backdrop: any;//遮罩层
    MobilePhone: any;//手机号
    ImgValidationCode: any;//图形验证码
    ValidationCode: any;//短信验证码
    ImgCode: any;//图形验证码路径
    //验证码倒计时
    verifyCode: any = {
        verifyCodeTips: "获取验证码",
        countdown: 60,
        disable: false
    };
    Password: any;//密码
    Recommendationcode: any;//推荐码
    ImgUrl: string;//图片路径

    constructor(public navCtrl: NavController, public navParams: NavParams, public _AlertService: AlertService, private _STLoginService: STLoginService, public _StorageService: StorageService) {
        this.MobilePhone = this.navParams.get('MobilePhone');
        //图片
        this.ImgUrl = FILE_SERVE_URL;
    }

    ionViewDidEnter() {
        //每次进入刷新图形验证码
        this.ImgCode = "http://www.dlstzc.com:8080/api/STAccount/imgStream?" + Math.floor(Math.random() * 100);
    }
    //打开弹窗
    OpenOverlay(OverlayId) {
        this.Overlay[OverlayId] = true;
        this.backdrop = true;
    }
    //关闭弹窗
    CloseOverlay() {
        this.Overlay = {};
        this.backdrop = false;
    }

    // 短信倒计时
    setTime() {
        this.verifyCode.disable = true;
        if (this.verifyCode.countdown == 1) {
            this.verifyCode.countdown = 60;
            this.verifyCode.verifyCodeTips = "重新获取验证码";
            this.verifyCode.disable = false;
            return;
        } else {
            this.verifyCode.countdown--;
        }

        this.verifyCode.verifyCodeTips = "重新获取(" + this.verifyCode.countdown + ")";
        setTimeout(() => {
            this.verifyCode.verifyCodeTips = "重新获取(" + this.verifyCode.countdown + ")";
            this.setTime();
        }, 1000);
    }

    //获得短信验证码
    getValidationCode() {
        if (Utils.isEmpty(this.ImgValidationCode)) {
            this._AlertService.presentAlert('', '请输入图形验证码');
            return;
        }
        this.sendCode();
    }

    //发送验证码接口
    sendCode() {
        this._STLoginService.SendCode(this.MobilePhone, this.ImgValidationCode).subscribe((data: any) => {
            if (data.Code == 1) {
                this._AlertService.presentAlert('', '图形验证码不正确');
                this.ImgCode = "http://www.dlstzc.com:8080/api/STAccount/imgStream?" + Math.floor(Math.random() * 100);
            }
            else {
                this.verifyCode.disable = false;
                this.setTime();
            }
        });
    }
    //提交注册
    goFillinpasswordPage() {
        this.CloseOverlay();
        this.navCtrl.push(FillinpasswordPage, { Phone: this.MobilePhone });
    }
    //点击提交
    submitToRegister() {
        this.Passwordverification();
    }
    //密码正则表达式验证
    Passwordverification() {
        var myreg = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/;
        if (!myreg.test(this.Password)) {
            this._AlertService.presentAlert('', '密码不符合规定');
            return;
        }
        else {
            this.CheckValidationCode();
        }
    }
    //判读短信验码
    CheckValidationCode() {
        this._STLoginService.CheckValidationCode(this.MobilePhone, this.ValidationCode).subscribe((data: any) => {
            // 请求成功
            if (data.Code == 0) {
                this.UserRegister();
            }
            else {
                this._AlertService.presentAlert('', '验证码输入有误');
            }
        });
    }
    //注册用户
    UserRegister() {
        this._STLoginService.UserRegister(this.MobilePhone, this.Password, this.Recommendationcode).subscribe((data: any) => {
            if (data.Code == 0) {
                this._StorageService.write(USER_INFO, data.Data);//存储信息 key value
                this.OpenOverlay('overlay1');
            }
        });
    }
}
